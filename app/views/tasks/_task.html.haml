%li.task{:id => "task_#{task.id || 'new'}", :class => "#{task.state} #{current_user == task.assigned ? 'assigned' : 'other'}"}
  - form_for task, :builder => CustomFormBuilder, :edit => @field, :html => {:class => 'ajaxForm'} do |f|
    %ul.title
      %li.handle{:title => 'drag to reorder'}
      %li.info{:title => 'click to see more'}
      %li{:class => task.category, :title => task.category}
        = link_to '', task_path(task, 'task[category]' => true), :class => :put
      %li.action
        - unless task.previous_release?
          = task_submit_button(f, task)
      %li.story= render :partial => 'stories/story', :object => task.story
      = f.text :name, :hint => "what's this about?"

    %ul.description{:class => ['assigned_id', 'story_id'].include?(@field) ? 'active' : nil}
      - if !%w(invalid verified).include?(task.state)
        %li.action
          = link_to 'invalidate', task_path(task, :state => :invalid), :class => 'put mark_invalid', :title => 'mark this task as invalid'
      = f.label :author_id, :prefix => 'by '
      = f.select :assigned_id, :collection => @developers, :prefix => 'assigned to ', :prompt => 'unassign', :nil => '(no one)'
      = f.label :verifier, :prefix => 'verified by '
      = f.label :started_on, :prefix => 'started ', :suffix => ' ago'
      = f.label :completed_on, :prefix => 'completed ', :suffix => ' ago'
      = f.select :story_id, :collection => @stories, :prefix => 'Story: ', :prompt => 'no story', :nil => '(no story)'

